version: '3.8'
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: microservices_backend
    ports:
      - "8000:8000"  # Lumen API
      - "3001:3001"  # Node.js API
    volumes:
      - ./backend/lumen:/app/backend-lumen
      - ./backend/node:/app/backend-node
    depends_on:
      mysql_db:
        condition: service_healthy
      redis_cache:
        condition: service_started
    environment:
      # Lumen environment variables
      - APP_NAME=LumenMicroservice
      - APP_ENV=local
      - APP_KEY=${APP_KEY:-base64:sPqM8kkhL+HJEj1P9nYPOQO2VPxVy+Rw+hdVTEX1M5Y=}
      - APP_DEBUG=true
      - APP_URL=http://localhost:8000
      - APP_TIMEZONE=UTC
      - DB_CONNECTION=mysql
      - DB_HOST=mysql_db
      - DB_PORT=3306
      - DB_DATABASE=lumen_db
      - DB_USERNAME=root
      - DB_PASSWORD=1265
      - CACHE_DRIVER=file
      - QUEUE_CONNECTION=sync
      # Redis configuration
      - REDIS_HOST=redis_cache
      - REDIS_PORT=6379
      # Node.js environment variables
      - NODE_ENV=development
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx_api
    ports:
      - "80:80"
    volumes:
      - ./backend/lumen:/var/www/backend
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - backend
    networks:
      - app-network

  mysql_db:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 1265
      MYSQL_DATABASE: lumen_db
      MYSQL_ROOT_HOST: "%"
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p1265"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis_cache:
    image: redis:alpine
    container_name: redis_cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

volumes:
  mysql_data:
  redis_data:

networks:
  app-network:
    driver: bridge
